В этом уроке Вам необходимо создать структуру данных типа кеш, которая будет абстрактной. Это значит, что мы должны предусмотреть возможность задать ключ для получения объекта из кеша, а если его нет в памяти, задать способ загрузки этого объекта в кеш. Для этого мы создадим абстрактный класс AbstractCache и реализуем его в конкретном классе DirFileCache

Основные шаги

Создание абстрактного класса AbstactCache:

Этот класс будет содержать методы для добавления (put) и получения (get) объектов по ключу.
В случае, если объект не найден в кеше, будет вызван абстрактный метод load, который должен быть реализован в подклассе для загрузки объекта.
Создание класса DirFileCache:

Этот класс будет конкретной реализацией AbstractCache, предназначенной для кэширования содержимого текстовых файлов.
Директория для кэшируемых файлов задаётся при создании объекта этого класса.
Метод load будет загружать содержимое файла из указанной директории.
Пояснения и советы

Фабричный метод: В данном примере метод load в классе AbstractCache
является фабричным методом, так как он определяет, как будет создан объект, когда его нет в кеше.
Понимание кэша: Кэширование - это процесс хранения данных в специальной памяти (кэше), чтобы быстро получать к ним доступ при повторных запросах. Это улучшает производительность приложений, уменьшая время доступа к часто используемым данным.
Работа с файлами: Внимательно отнеситесь к обработке ошибок при работе с файлами, чтобы ваша программа была устойчивой к различным ситуациям, например, когда файл не существует или доступ к нему ограничен.